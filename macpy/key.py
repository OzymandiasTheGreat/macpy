#!/usr/bin/env python3

import sys
if sys.version_info >= (3, 6):
	from enum import Enum
else:
	from aenum import Enum
from collections import Sequence
from .types.undefenum import UndefEnum, export
from .constant.VK import VirtualKeycode as VK
from .constant.EC import EventCode as EC


class Key(tuple, UndefEnum):
	"""An enumeration describing platform independent keys/buttons.

	While members of this enum behave the same on every platform, not every
	platform defines every key. For complete list of keys/buttons defined
	on your platform see ``input.h`` on Linux and `Virtual Keycodes`_ on
	Windows.

	Members of this enum are also valid :class:`tuple` where first member is
	a Linux event code and second member is a Windows virtual keycode.
	These can also be accessed as attributes :attr:`ec` and :attr:`vk`
	respectively.

	.. _Virtual Keycodes: https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx
	"""


	__value_type__ = tuple
	__ec2vk__ = {}
	__vk2ec__ = {}

	KEY_RESERVED = (EC.KEY_RESERVED, None)
	KEY_ESCAPE = (EC.KEY_ESC, VK.VK_ESCAPE)
	KEY_1 = (EC.KEY_1, VK.VK_1)
	KEY_2 = (EC.KEY_2, VK.VK_2)
	KEY_3 = (EC.KEY_3, VK.VK_3)
	KEY_4 = (EC.KEY_4, VK.VK_4)
	KEY_5 = (EC.KEY_5, VK.VK_5)
	KEY_6 = (EC.KEY_6, VK.VK_6)
	KEY_7 = (EC.KEY_7, VK.VK_7)
	KEY_8 = (EC.KEY_8, VK.VK_8)
	KEY_9 = (EC.KEY_9, VK.VK_9)
	KEY_0 = (EC.KEY_0, VK.VK_0)
	KEY_MINUS = (EC.KEY_MINUS, VK.VK_OEM_MINUS)
	KEY_EQUAL = (EC.KEY_EQUAL, VK.VK_OEM_PLUS)
	KEY_BACKSPACE = (EC.KEY_BACKSPACE, VK.VK_BACK)
	KEY_TAB = (EC.KEY_TAB, VK.VK_TAB)
	KEY_Q = (EC.KEY_Q, VK.VK_Q)
	KEY_W = (EC.KEY_W, VK.VK_W)
	KEY_E = (EC.KEY_E, VK.VK_E)
	KEY_R = (EC.KEY_R, VK.VK_R)
	KEY_T = (EC.KEY_T, VK.VK_T)
	KEY_Y = (EC.KEY_Y, VK.VK_Y)
	KEY_U = (EC.KEY_U, VK.VK_U)
	KEY_I = (EC.KEY_I, VK.VK_I)
	KEY_O = (EC.KEY_O, VK.VK_O)
	KEY_P = (EC.KEY_P, VK.VK_P)
	KEY_LEFTBRACE = (EC.KEY_LEFTBRACE, VK.VK_OEM_4)
	KEY_RIGHTBRACE = (EC.KEY_RIGHTBRACE, VK.VK_OEM_6)
	KEY_ENTER = (EC.KEY_ENTER, VK.VK_RETURN)
	KEY_LEFTCTRL = (EC.KEY_LEFTCTRL, VK.VK_LCONTROL)
	KEY_A = (EC.KEY_A, VK.VK_A)
	KEY_S = (EC.KEY_S, VK.VK_S)
	KEY_D = (EC.KEY_D, VK.VK_D)
	KEY_F = (EC.KEY_F, VK.VK_F)
	KEY_G = (EC.KEY_G, VK.VK_G)
	KEY_H = (EC.KEY_H, VK.VK_H)
	KEY_J = (EC.KEY_J, VK.VK_J)
	KEY_K = (EC.KEY_K, VK.VK_K)
	KEY_L = (EC.KEY_L, VK.VK_L)
	KEY_SEMICOLON = (EC.KEY_SEMICOLON, VK.VK_OEM_1)
	KEY_APOSTROPHE = (EC.KEY_APOSTROPHE, VK.VK_OEM_7)
	KEY_GRAVE = (EC.KEY_GRAVE, VK.VK_OEM_3)
	KEY_LEFTSHIFT = (EC.KEY_LEFTSHIFT, VK.VK_LSHIFT)
	KEY_BACKSLASH = (EC.KEY_BACKSLASH, VK.VK_OEM_5)
	KEY_Z = (EC.KEY_Z, VK.VK_Z)
	KEY_X = (EC.KEY_X, VK.VK_X)
	KEY_C = (EC.KEY_C, VK.VK_C)
	KEY_V = (EC.KEY_V, VK.VK_V)
	KEY_B = (EC.KEY_B, VK.VK_B)
	KEY_N = (EC.KEY_N, VK.VK_N)
	KEY_M = (EC.KEY_M, VK.VK_M)
	KEY_COMMA = (EC.KEY_COMMA, VK.VK_OEM_COMMA)
	KEY_DOT = (EC.KEY_DOT, VK.VK_OEM_PERIOD)
	KEY_SLASH = (EC.KEY_SLASH, VK.VK_OEM_2)
	KEY_RIGHTSHIFT = (EC.KEY_RIGHTSHIFT, VK.VK_RSHIFT)
	KEY_KPASTERISK = (EC.KEY_KPASTERISK, VK.VK_MULTIPLY)
	KEY_LEFTALT = (EC.KEY_LEFTALT, VK.VK_LMENU)
	KEY_SPACE = (EC.KEY_SPACE, VK.VK_SPACE)
	KEY_CAPSLOCK = (EC.KEY_CAPSLOCK, VK.VK_CAPITAL)
	KEY_F1 = (EC.KEY_F1, VK.VK_F1)
	KEY_F2 = (EC.KEY_F2, VK.VK_F2)
	KEY_F3 = (EC.KEY_F3, VK.VK_F3)
	KEY_F4 = (EC.KEY_F4, VK.VK_F4)
	KEY_F5 = (EC.KEY_F5, VK.VK_F5)
	KEY_F6 = (EC.KEY_F6, VK.VK_F6)
	KEY_F7 = (EC.KEY_F7, VK.VK_F7)
	KEY_F8 = (EC.KEY_F8, VK.VK_F8)
	KEY_F9 = (EC.KEY_F9, VK.VK_F9)
	KEY_F10 = (EC.KEY_F10, VK.VK_F10)
	KEY_NUMLOCK = (EC.KEY_NUMLOCK, VK.VK_NUMLOCK)
	KEY_SCROLLLOCK = (EC.KEY_SCROLLLOCK, VK.VK_SCROLL)
	KEY_KP7 = (EC.KEY_KP7, VK.VK_NUMPAD7)
	KEY_KP8 = (EC.KEY_KP8, VK.VK_NUMPAD8)
	KEY_KP9 = (EC.KEY_KP9, VK.VK_NUMPAD9)
	KEY_KPMINUS = (EC.KEY_KPMINUS, VK.VK_SUBTRACT)
	KEY_KP4 = (EC.KEY_KP4, VK.VK_NUMPAD4)
	KEY_KP5 = (EC.KEY_KP5, VK.VK_NUMPAD5)
	KEY_KP6 = (EC.KEY_KP6, VK.VK_NUMPAD6)
	KEY_KPPLUS = (EC.KEY_KPPLUS, VK.VK_ADD)
	KEY_KP1 = (EC.KEY_KP1, VK.VK_NUMPAD1)
	KEY_KP2 = (EC.KEY_KP2, VK.VK_NUMPAD2)
	KEY_KP3 = (EC.KEY_KP3, VK.VK_NUMPAD3)
	KEY_KP0 = (EC.KEY_KP0, VK.VK_NUMPAD0)
	KEY_KPDOT = (EC.KEY_KPDOT, VK.VK_DECIMAL)

	KEY_ZENKAKUHANKAKU = (EC.KEY_ZENKAKUHANKAKU, None)
	KEY_102ND = (EC.KEY_102ND, VK.VK_OEM_102)
	KEY_F11 = (EC.KEY_F11, VK.VK_F11)
	KEY_F12 = (EC.KEY_F12, VK.VK_F12)
	KEY_RO = (EC.KEY_RO, None)
	KEY_KATAKANA = (EC.KEY_KATAKANA, VK.VK_KANA)
	KEY_HIRAGANA = (EC.KEY_HIRAGANA, None)
	KEY_HENKAN = (EC.KEY_HENKAN, None)
	KEY_KATAKANAHIRAGANA = (EC.KEY_KATAKANAHIRAGANA, None)
	KEY_MUHENKAN = (EC.KEY_MUHENKAN, None)
	KEY_KPJPCOMMA = (EC.KEY_KPJPCOMMA, None)
	KEY_KPENTER = (EC.KEY_KPENTER, VK.VK_RETURN)
	KEY_RIGHTCTRL = (EC.KEY_RIGHTCTRL, VK.VK_RCONTROL)
	KEY_KPSLASH = (EC.KEY_KPSLASH, VK.VK_DIVIDE)
	KEY_SYSRQ = (EC.KEY_SYSRQ, VK.VK_SNAPSHOT)
	KEY_RIGHTALT = (EC.KEY_RIGHTALT, VK.VK_RMENU)
	KEY_LINEFEED = (EC.KEY_LINEFEED, None)
	KEY_HOME = (EC.KEY_HOME, VK.VK_HOME)
	KEY_UP = (EC.KEY_UP, VK.VK_UP)
	KEY_PAGEUP = (EC.KEY_PAGEUP, VK.VK_PRIOR)
	KEY_LEFT = (EC.KEY_LEFT, VK.VK_LEFT)
	KEY_RIGHT = (EC.KEY_RIGHT, VK.VK_RIGHT)
	KEY_END = (EC.KEY_END, VK.VK_END)
	KEY_DOWN = (EC.KEY_DOWN, VK.VK_DOWN)
	KEY_PAGEDOWN = (EC.KEY_PAGEDOWN, VK.VK_NEXT)
	KEY_INSERT = (EC.KEY_INSERT, VK.VK_INSERT)
	KEY_DELETE = (EC.KEY_DELETE, VK.VK_DELETE)
	KEY_MACRO = (EC.KEY_MACRO, None)
	KEY_MUTE = (EC.KEY_MUTE, VK.VK_VOLUME_MUTE)
	KEY_VOLUMEDOWN = (EC.KEY_VOLUMEDOWN, VK.VK_VOLUME_DOWN)
	KEY_VOLUMEUP = (EC.KEY_VOLUMEUP, VK.VK_VOLUME_UP)
	KEY_POWER = (EC.KEY_POWER, None)
	KEY_KPEQUAL = (EC.KEY_KPEQUAL, None)
	KEY_KPPLUSMINUS = (EC.KEY_KPPLUSMINUS, None)
	KEY_PAUSE = (EC.KEY_PAUSE, VK.VK_PAUSE)
	KEY_SCALE = (EC.KEY_SCALE, None)

	KEY_KPCOMMA = (EC.KEY_KPCOMMA, VK.VK_SEPARATOR)
	KEY_HANGEUL = (EC.KEY_HANGEUL, VK.VK_HANGUL)
	KEY_HANJA = (EC.KEY_HANJA, VK.VK_HANJA)
	KEY_YEN = (EC.KEY_YEN, None)
	KEY_LEFTMETA = (EC.KEY_LEFTMETA, VK.VK_LWIN)
	KEY_RIGHTMETA = (EC.KEY_RIGHTMETA, VK.VK_RWIN)
	KEY_COMPOSE = (EC.KEY_COMPOSE, None)

	KEY_STOP = (EC.KEY_STOP, None)
	KEY_AGAIN = (EC.KEY_AGAIN, None)
	KEY_PROPS = (EC.KEY_PROPS, None)
	KEY_UNDO = (EC.KEY_UNDO, None)
	KEY_FRONT = (EC.KEY_FRONT, None)
	KEY_COPY = (EC.KEY_COPY, None)
	KEY_OPEN = (EC.KEY_OPEN, None)
	KEY_PASTE = (EC.KEY_PASTE, None)
	KEY_FIND = (EC.KEY_FIND, None)
	KEY_CUT = (EC.KEY_CUT, None)
	KEY_HELP = (EC.KEY_HELP, VK.VK_HELP)
	KEY_MENU = (EC.KEY_MENU, VK.VK_APPS)
	KEY_CALC = (EC.KEY_CALC, None)
	KEY_SETUP = (EC.KEY_SETUP, None)
	KEY_SLEEP = (EC.KEY_SLEEP, VK.VK_SLEEP)
	KEY_WAKEUP = (EC.KEY_WAKEUP, None)
	KEY_FILE = (EC.KEY_FILE, None)
	KEY_SENDFILE = (EC.KEY_SENDFILE, None)
	KEY_DELETEFILE = (EC.KEY_DELETEFILE, None)
	KEY_XFER = (EC.KEY_XFER, None)
	KEY_PROG1 = (EC.KEY_PROG1, VK.VK_LAUNCH_APP1)
	KEY_PROG2 = (EC.KEY_PROG2, VK.VK_LAUNCH_APP2)
	KEY_WWW = (EC.KEY_WWW, VK.VK_BROWSER_SEARCH)
	KEY_MSDOS = (EC.KEY_MSDOS, None)
	KEY_COFFEE = (EC.KEY_COFFEE, None)
	KEY_ROTATE_DISPLAY = (EC.KEY_ROTATE_DISPLAY, None)
	KEY_CYCLEWINDOWS = (EC.KEY_CYCLEWINDOWS, None)
	KEY_MAIL = (EC.KEY_MAIL, VK.VK_LAUNCH_MAIL)
	KEY_BOOKMARKS = (EC.KEY_BOOKMARKS, VK.VK_BROWSER_FAVORITES)
	KEY_COMPUTER = (EC.KEY_COMPUTER, None)
	KEY_BACK = (EC.KEY_BACK, VK.VK_BROWSER_BACK)
	KEY_FORWARD = (EC.KEY_FORWARD, VK.VK_BROWSER_FORWARD)
	KEY_CLOSECD = (EC.KEY_CLOSECD, None)
	KEY_EJECTCD = (EC.KEY_EJECTCD, None)
	KEY_EJECTCLOSECD = (EC.KEY_EJECTCLOSECD, None)
	KEY_NEXTSONG = (EC.KEY_NEXTSONG, VK.VK_MEDIA_NEXT_TRACK)
	KEY_PLAYPAUSE = (EC.KEY_PLAYPAUSE, VK.VK_MEDIA_PLAY_PAUSE)
	KEY_PREVIOUSSONG = (EC.KEY_PREVIOUSSONG, VK.VK_MEDIA_PREV_TRACK)
	KEY_STOPCD = (EC.KEY_STOPCD, None)
	KEY_RECORD = (EC.KEY_RECORD, None)
	KEY_REWIND = (EC.KEY_REWIND, None)
	KEY_PHONE = (EC.KEY_PHONE, None)
	KEY_ISO = (EC.KEY_ISO, None)
	KEY_CONFIG = (EC.KEY_CONFIG, None)
	KEY_HOMEPAGE = (EC.KEY_HOMEPAGE, VK.VK_BROWSER_HOME)
	KEY_REFRESH = (EC.KEY_REFRESH, VK.VK_BROWSER_REFRESH)
	KEY_EXIT = (EC.KEY_EXIT, None)
	KEY_MOVE = (EC.KEY_MOVE, None)
	KEY_EDIT = (EC.KEY_EDIT, None)
	KEY_SCROLLUP = (EC.KEY_SCROLLUP, None)
	KEY_SCROLLDOWN = (EC.KEY_SCROLLDOWN, None)
	KEY_KPLEFTPAREN = (EC.KEY_KPLEFTPAREN, None)
	KEY_KPRIGHTPAREN = (EC.KEY_KPRIGHTPAREN, None)
	KEY_NEW = (EC.KEY_NEW, None)
	KEY_REDO = (EC.KEY_REDO, None)

	KEY_F13 = (EC.KEY_F13, VK.VK_F13)
	KEY_F14 = (EC.KEY_F14, VK.VK_F14)
	KEY_F15 = (EC.KEY_F15, VK.VK_F15)
	KEY_F16 = (EC.KEY_F16, VK.VK_F16)
	KEY_F17 = (EC.KEY_F17, VK.VK_F17)
	KEY_F18 = (EC.KEY_F18, VK.VK_F18)
	KEY_F19 = (EC.KEY_F19, VK.VK_F19)
	KEY_F20 = (EC.KEY_F20, VK.VK_F20)
	KEY_F21 = (EC.KEY_F21, VK.VK_F21)
	KEY_F22 = (EC.KEY_F22, VK.VK_F22)
	KEY_F23 = (EC.KEY_F23, VK.VK_F23)
	KEY_F24 = (EC.KEY_F24, VK.VK_F24)

	KEY_PLAYCD = (EC.KEY_PLAYCD, None)
	KEY_PAUSECD = (EC.KEY_PAUSECD, None)
	KEY_PROG3 = (EC.KEY_PROG3, None)
	KEY_PROG4 = (EC.KEY_PROG4, None)
	KEY_DASHBOARD = (EC.KEY_DASHBOARD, None)
	KEY_SUSPEND = (EC.KEY_SUSPEND, None)
	KEY_CLOSE = (EC.KEY_CLOSE, None)
	KEY_PLAY = (EC.KEY_PLAY, VK.VK_PLAY)
	KEY_FASTFORWARD = (EC.KEY_FASTFORWARD, None)
	KEY_BASSBOOST = (EC.KEY_BASSBOOST, None)
	KEY_PRINT = (EC.KEY_PRINT, VK.VK_PRINT)
	KEY_HP = (EC.KEY_HP, None)
	KEY_CAMERA = (EC.KEY_CAMERA, None)
	KEY_SOUND = (EC.KEY_SOUND, None)
	KEY_QUESTION = (EC.KEY_QUESTION, None)
	KEY_EMAIL = (EC.KEY_EMAIL, VK.VK_LAUNCH_MAIL)
	KEY_CHAT = (EC.KEY_CHAT, None)
	KEY_SEARCH = (EC.KEY_SEARCH, VK.VK_BROWSER_SEARCH)
	KEY_CONNECT = (EC.KEY_CONNECT, None)
	KEY_FINANCE = (EC.KEY_FINANCE, None)
	KEY_SPORT = (EC.KEY_SPORT, None)
	KEY_SHOP = (EC.KEY_SHOP, None)
	KEY_ALTERASE = (EC.KEY_ALTERASE, None)
	KEY_CANCEL = (EC.KEY_CANCEL, VK.VK_CANCEL)
	KEY_BRIGHTNESSDOWN = (EC.KEY_BRIGHTNESSDOWN, None)
	KEY_BRIGHTNESSUP = (EC.KEY_BRIGHTNESSUP, None)
	KEY_MEDIA = (EC.KEY_MEDIA, VK.VK_LAUNCH_MEDIA_SELECT)

	KEY_SWITCHVIDEOMODE = (EC.KEY_SWITCHVIDEOMODE, None)
	KEY_KBDILLUMTOGGLE = (EC.KEY_KBDILLUMTOGGLE, None)
	KEY_KBDILLUMDOWN = (EC.KEY_KBDILLUMDOWN, None)
	KEY_KBDILLUMUP = (EC.KEY_KBDILLUMUP, None)

	KEY_SEND = (EC.KEY_SEND, None)
	KEY_REPLY = (EC.KEY_REPLY, None)
	KEY_FORWARDMAIL = (EC.KEY_FORWARDMAIL, None)
	KEY_SAVE = (EC.KEY_SAVE, None)
	KEY_DOCUMENTS = (EC.KEY_DOCUMENTS, None)

	KEY_BATTERY = (EC.KEY_BATTERY, None)

	KEY_BLUETOOTH = (EC.KEY_BLUETOOTH, None)
	KEY_WLAN = (EC.KEY_WLAN, None)
	KEY_UWB = (EC.KEY_UWB, None)

	KEY_UNKNOWN = (EC.KEY_UNKNOWN, None)

	KEY_VIDEO_NEXT = (EC.KEY_VIDEO_NEXT, None)
	KEY_VIDEO_PREV = (EC.KEY_VIDEO_PREV, None)
	KEY_BRIGHTNESS_CYCLE = (EC.KEY_BRIGHTNESS_CYCLE, None)
	KEY_BRIGHTNESS_AUTO = (EC.KEY_BRIGHTNESS_AUTO, None)
	KEY_DISPLAY_OFF = (EC.KEY_DISPLAY_OFF, None)

	KEY_WWAN = (EC.KEY_WWAN, None)
	KEY_RFKILL = (EC.KEY_RFKILL, None)

	KEY_MICMUTE = (EC.KEY_MICMUTE, None)

	BTN_MISC = (EC.BTN_MISC, None)
	BTN_0 = (EC.BTN_0, None)
	BTN_1 = (EC.BTN_1, None)
	BTN_2 = (EC.BTN_2, None)
	BTN_3 = (EC.BTN_3, None)
	BTN_4 = (EC.BTN_4, None)
	BTN_5 = (EC.BTN_5, None)
	BTN_6 = (EC.BTN_6, None)
	BTN_7 = (EC.BTN_7, None)
	BTN_8 = (EC.BTN_8, None)
	BTN_9 = (EC.BTN_9, None)

	BTN_MOUSE = (EC.BTN_MOUSE, VK.VK_LBUTTON)
	BTN_LEFT = (EC.BTN_LEFT, VK.VK_LBUTTON)
	BTN_RIGHT = (EC.BTN_RIGHT, VK.VK_RBUTTON)
	BTN_MIDDLE = (EC.BTN_MIDDLE, VK.VK_MBUTTON)
	BTN_SIDE = (EC.BTN_SIDE, VK.VK_XBUTTON1)
	BTN_EXTRA = (EC.BTN_EXTRA, VK.VK_XBUTTON2)
	BTN_FORWARD = (EC.BTN_FORWARD, VK.VK_XBUTTON2)
	BTN_BACK = (EC.BTN_BACK, VK.VK_XBUTTON1)
	BTN_TASK = (EC.BTN_TASK, None)

	BTN_JOYSTICK = (EC.BTN_JOYSTICK, None)
	BTN_TRIGGER = (EC.BTN_TRIGGER, None)
	BTN_THUMB = (EC.BTN_THUMB, None)
	BTN_THUMB2 = (EC.BTN_THUMB2, None)
	BTN_TOP = (EC.BTN_TOP, None)
	BTN_TOP2 = (EC.BTN_TOP2, None)
	BTN_PINKIE = (EC.BTN_PINKIE, None)
	BTN_BASE = (EC.BTN_BASE, None)
	BTN_BASE2 = (EC.BTN_BASE2, None)
	BTN_BASE3 = (EC.BTN_BASE3, None)
	BTN_BASE4 = (EC.BTN_BASE4, None)
	BTN_BASE5 = (EC.BTN_BASE5, None)
	BTN_BASE6 = (EC.BTN_BASE6, None)
	BTN_DEAD = (EC.BTN_DEAD, None)

	BTN_GAMEPAD = (EC.BTN_GAMEPAD, None)
	BTN_SOUTH = (EC.BTN_SOUTH, None)
	BTN_A = BTN_SOUTH
	BTN_EAST = (EC.BTN_EAST, None)
	BTN_B = BTN_EAST
	BTN_C = (EC.BTN_C, None)
	BTN_NORTH = (EC.BTN_NORTH, None)
	BTN_X = BTN_NORTH
	BTN_WEST = (EC.BTN_WEST, None)
	BTN_Y = BTN_WEST
	BTN_Z = (EC.BTN_Z, None)
	BTN_TL = (EC.BTN_TL, None)
	BTN_TR = (EC.BTN_TR, None)
	BTN_TL2 = (EC.BTN_TL2, None)
	BTN_TR2 = (EC.BTN_TR2, None)
	BTN_SELECT = (EC.BTN_SELECT, None)
	BTN_START = (EC.BTN_START, None)
	BTN_MODE = (EC.BTN_MODE, None)
	BTN_THUMBL = (EC.BTN_THUMBL, None)
	BTN_THUMBR = (EC.BTN_THUMBR, None)

	BTN_DIGI = (EC.BTN_DIGI, None)
	BTN_TOOL_PEN = (EC.BTN_TOOL_PEN, None)
	BTN_TOOL_RUBBER = (EC.BTN_TOOL_RUBBER, None)
	BTN_TOOL_BRUSH = (EC.BTN_TOOL_BRUSH, None)
	BTN_TOOL_PENCIL = (EC.BTN_TOOL_PENCIL, None)
	BTN_TOOL_AIRBRUSH = (EC.BTN_TOOL_AIRBRUSH, None)
	BTN_TOOL_FINGER = (EC.BTN_TOOL_FINGER, None)
	BTN_TOOL_MOUSE = (EC.BTN_TOOL_MOUSE, None)
	BTN_TOOL_LENS = (EC.BTN_TOOL_LENS, None)
	BTN_TOOL_QUINTTAP = (EC.BTN_TOOL_QUINTTAP, None)
	BTN_TOUCH = (EC.BTN_TOUCH, None)
	BTN_STYLUS = (EC.BTN_STYLUS, None)
	BTN_STYLUS2 = (EC.BTN_STYLUS2, None)
	BTN_TOOL_DOUBLETAP = (EC.BTN_TOOL_DOUBLETAP, None)
	BTN_TOOL_TRIPLETAP = (EC.BTN_TOOL_TRIPLETAP, None)
	BTN_TOOL_QUADTAP = (EC.BTN_TOOL_QUADTAP, None)

	BTN_WHEEL = (EC.BTN_WHEEL, None)
	BTN_GEAR_DOWN = (EC.BTN_GEAR_DOWN, None)
	BTN_GEAR_UP = (EC.BTN_GEAR_UP, None)

	KEY_OK = (EC.KEY_OK, None)
	KEY_SELECT = (EC.KEY_SELECT, VK.VK_SELECT)
	KEY_GOTO = (EC.KEY_GOTO, None)
	KEY_CLEAR = (EC.KEY_CLEAR, VK.VK_CLEAR)
	KEY_POWER2 = (EC.KEY_POWER2, None)
	KEY_OPTION = (EC.KEY_OPTION, None)
	KEY_INFO = (EC.KEY_INFO, None)
	KEY_TIME = (EC.KEY_TIME, None)
	KEY_VENDOR = (EC.KEY_VENDOR, None)
	KEY_ARCHIVE = (EC.KEY_ARCHIVE, None)
	KEY_PROGRAM = (EC.KEY_PROGRAM, None)
	KEY_CHANNEL = (EC.KEY_CHANNEL, None)
	KEY_FAVORITES = (EC.KEY_FAVORITES, None)
	KEY_EPG = (EC.KEY_EPG, None)
	KEY_PVR = (EC.KEY_PVR, None)
	KEY_MHP = (EC.KEY_MHP, None)
	KEY_LANGUAGE = (EC.KEY_LANGUAGE, None)
	KEY_TITLE = (EC.KEY_TITLE, None)
	KEY_SUBTITLE = (EC.KEY_SUBTITLE, None)
	KEY_ANGLE = (EC.KEY_ANGLE, None)
	KEY_ZOOM = (EC.KEY_ZOOM, None)
	KEY_MODE = (EC.KEY_MODE, None)
	KEY_KEYBOARD = (EC.KEY_KEYBOARD, None)
	KEY_SCREEN = (EC.KEY_SCREEN, None)
	KEY_PC = (EC.KEY_PC, None)
	KEY_TV = (EC.KEY_TV, None)
	KEY_TV2 = (EC.KEY_TV2, None)
	KEY_VCR = (EC.KEY_VCR, None)
	KEY_VCR2 = (EC.KEY_VCR2, None)
	KEY_SAT = (EC.KEY_SAT, None)
	KEY_SAT2 = (EC.KEY_SAT2, None)
	KEY_CD = (EC.KEY_CD, None)
	KEY_TAPE = (EC.KEY_TAPE, None)
	KEY_RADIO = (EC.KEY_RADIO, None)
	KEY_TUNER = (EC.KEY_TUNER, None)
	KEY_PLAYER = (EC.KEY_PLAYER, None)
	KEY_TEXT = (EC.KEY_TEXT, None)
	KEY_DVD = (EC.KEY_DVD, None)
	KEY_AUX = (EC.KEY_AUX, None)
	KEY_MP3 = (EC.KEY_MP3, None)
	KEY_AUDIO = (EC.KEY_AUDIO, None)
	KEY_VIDEO = (EC.KEY_VIDEO, None)
	KEY_DIRECTORY = (EC.KEY_DIRECTORY, None)
	KEY_LIST = (EC.KEY_LIST, None)
	KEY_MEMO = (EC.KEY_MEMO, None)
	KEY_CALENDAR = (EC.KEY_CALENDAR, None)
	KEY_RED = (EC.KEY_RED, None)
	KEY_GREEN = (EC.KEY_GREEN, None)
	KEY_YELLOW = (EC.KEY_YELLOW, None)
	KEY_BLUE = (EC.KEY_BLUE, None)
	KEY_CHANNELUP = (EC.KEY_CHANNELUP, None)
	KEY_CHANNELDOWN = (EC.KEY_CHANNELDOWN, None)
	KEY_FIRST = (EC.KEY_FIRST, None)
	KEY_LAST = (EC.KEY_LAST, None)
	KEY_AB = (EC.KEY_AB, None)
	KEY_NEXT = (EC.KEY_NEXT, None)
	KEY_RESTART = (EC.KEY_RESTART, None)
	KEY_SLOW = (EC.KEY_SLOW, None)
	KEY_SHUFFLE = (EC.KEY_SHUFFLE, None)
	KEY_BREAK = (EC.KEY_BREAK, None)
	KEY_PREVIOUS = (EC.KEY_PREVIOUS, None)
	KEY_DIGITS = (EC.KEY_DIGITS, None)
	KEY_TEEN = (EC.KEY_TEEN, None)
	KEY_TWEN = (EC.KEY_TWEN, None)
	KEY_VIDEOPHONE = (EC.KEY_VIDEOPHONE, None)
	KEY_GAMES = (EC.KEY_GAMES, None)
	KEY_ZOOMIN = (EC.KEY_ZOOMIN, None)
	KEY_ZOOMOUT = (EC.KEY_ZOOMOUT, None)
	KEY_ZOOMRESET = (EC.KEY_ZOOMRESET, None)
	KEY_WORDPROCESSOR = (EC.KEY_WORDPROCESSOR, None)
	KEY_EDITOR = (EC.KEY_EDITOR, None)
	KEY_SPREADSHEET = (EC.KEY_SPREADSHEET, None)
	KEY_GRAPHICSEDITOR = (EC.KEY_GRAPHICSEDITOR, None)
	KEY_PRESENTATION = (EC.KEY_PRESENTATION, None)
	KEY_DATABASE = (EC.KEY_DATABASE, None)
	KEY_NEWS = (EC.KEY_NEWS, None)
	KEY_VOICEMAIL = (EC.KEY_VOICEMAIL, None)
	KEY_ADDRESSBOOK = (EC.KEY_ADDRESSBOOK, None)
	KEY_MESSENGER = (EC.KEY_MESSENGER, None)
	KEY_DISPLAYTOGGLE = (EC.KEY_DISPLAYTOGGLE, None)
	KEY_BRIGHTNESS_TOGGLE = KEY_DISPLAYTOGGLE
	KEY_SPELLCHECK = (EC.KEY_SPELLCHECK, None)
	KEY_LOGOFF = (EC.KEY_LOGOFF, None)

	KEY_DOLLAR = (EC.KEY_DOLLAR, None)
	KEY_EURO = (EC.KEY_EURO, None)

	KEY_FRAMEBACK = (EC.KEY_FRAMEBACK, None)
	KEY_FRAMEFORWARD = (EC.KEY_FRAMEFORWARD, None)
	KEY_CONTEXT_MENU = (EC.KEY_CONTEXT_MENU, None)
	KEY_MEDIA_REPEAT = (EC.KEY_MEDIA_REPEAT, None)
	KEY_10CHANNELSUP = (EC.KEY_10CHANNELSUP, None)
	KEY_10CHANNELSDOWN = (EC.KEY_10CHANNELSDOWN, None)
	KEY_IMAGES = (EC.KEY_IMAGES, None)

	KEY_DEL_EOL = (EC.KEY_DEL_EOL, None)
	KEY_DEL_EOS = (EC.KEY_DEL_EOS, None)
	KEY_INS_LINE = (EC.KEY_INS_LINE, None)
	KEY_DEL_LINE = (EC.KEY_DEL_LINE, None)

	KEY_FN = (EC.KEY_FN, None)
	KEY_FN_ESC = (EC.KEY_FN_ESC, None)
	KEY_FN_F1 = (EC.KEY_FN_F1, None)
	KEY_FN_F2 = (EC.KEY_FN_F2, None)
	KEY_FN_F3 = (EC.KEY_FN_F3, None)
	KEY_FN_F4 = (EC.KEY_FN_F4, None)
	KEY_FN_F5 = (EC.KEY_FN_F5, None)
	KEY_FN_F6 = (EC.KEY_FN_F6, None)
	KEY_FN_F7 = (EC.KEY_FN_F7, None)
	KEY_FN_F8 = (EC.KEY_FN_F8, None)
	KEY_FN_F9 = (EC.KEY_FN_F9, None)
	KEY_FN_F10 = (EC.KEY_FN_F10, None)
	KEY_FN_F11 = (EC.KEY_FN_F11, None)
	KEY_FN_F12 = (EC.KEY_FN_F12, None)
	KEY_FN_1 = (EC.KEY_FN_1, None)
	KEY_FN_2 = (EC.KEY_FN_2, None)
	KEY_FN_D = (EC.KEY_FN_D, None)
	KEY_FN_E = (EC.KEY_FN_E, None)
	KEY_FN_F = (EC.KEY_FN_F, None)
	KEY_FN_S = (EC.KEY_FN_S, None)
	KEY_FN_B = (EC.KEY_FN_B, None)

	KEY_BRL_DOT1 = (EC.KEY_BRL_DOT1, None)
	KEY_BRL_DOT2 = (EC.KEY_BRL_DOT2, None)
	KEY_BRL_DOT3 = (EC.KEY_BRL_DOT3, None)
	KEY_BRL_DOT4 = (EC.KEY_BRL_DOT4, None)
	KEY_BRL_DOT5 = (EC.KEY_BRL_DOT5, None)
	KEY_BRL_DOT6 = (EC.KEY_BRL_DOT6, None)
	KEY_BRL_DOT7 = (EC.KEY_BRL_DOT7, None)
	KEY_BRL_DOT8 = (EC.KEY_BRL_DOT8, None)
	KEY_BRL_DOT9 = (EC.KEY_BRL_DOT9, None)
	KEY_BRL_DOT10 = (EC.KEY_BRL_DOT10, None)

	KEY_NUMERIC_0 = (EC.KEY_NUMERIC_0, None)
	KEY_NUMERIC_1 = (EC.KEY_NUMERIC_1, None)
	KEY_NUMERIC_2 = (EC.KEY_NUMERIC_2, None)
	KEY_NUMERIC_3 = (EC.KEY_NUMERIC_3, None)
	KEY_NUMERIC_4 = (EC.KEY_NUMERIC_4, None)
	KEY_NUMERIC_5 = (EC.KEY_NUMERIC_5, None)
	KEY_NUMERIC_6 = (EC.KEY_NUMERIC_6, None)
	KEY_NUMERIC_7 = (EC.KEY_NUMERIC_7, None)
	KEY_NUMERIC_8 = (EC.KEY_NUMERIC_8, None)
	KEY_NUMERIC_9 = (EC.KEY_NUMERIC_9, None)
	KEY_NUMERIC_STAR = (EC.KEY_NUMERIC_STAR, None)
	KEY_NUMERIC_POUND = (EC.KEY_NUMERIC_POUND, None)
	KEY_NUMERIC_A = (EC.KEY_NUMERIC_A, None)
	KEY_NUMERIC_B = (EC.KEY_NUMERIC_B, None)
	KEY_NUMERIC_C = (EC.KEY_NUMERIC_C, None)
	KEY_NUMERIC_D = (EC.KEY_NUMERIC_D, None)

	KEY_CAMERA_FOCUS = (EC.KEY_CAMERA_FOCUS, None)
	KEY_WPS_BUTTON = (EC.KEY_WPS_BUTTON, None)

	KEY_TOUCHPAD_TOGGLE = (EC.KEY_TOUCHPAD_TOGGLE, None)
	KEY_TOUCHPAD_ON = (EC.KEY_TOUCHPAD_ON, None)
	KEY_TOUCHPAD_OFF = (EC.KEY_TOUCHPAD_OFF, None)

	KEY_CAMERA_ZOOMIN = (EC.KEY_CAMERA_ZOOMIN, None)
	KEY_CAMERA_ZOOMOUT = (EC.KEY_CAMERA_ZOOMOUT, None)
	KEY_CAMERA_UP = (EC.KEY_CAMERA_UP, None)
	KEY_CAMERA_DOWN = (EC.KEY_CAMERA_DOWN, None)
	KEY_CAMERA_LEFT = (EC.KEY_CAMERA_LEFT, None)
	KEY_CAMERA_RIGHT = (EC.KEY_CAMERA_RIGHT, None)

	KEY_ATTENDANT_ON = (EC.KEY_ATTENDANT_ON, None)
	KEY_ATTENDANT_OFF = (EC.KEY_ATTENDANT_OFF, None)
	KEY_ATTENDANT_TOGGLE = (EC.KEY_ATTENDANT_TOGGLE, None)
	KEY_LIGHTS_TOGGLE = (EC.KEY_LIGHTS_TOGGLE, None)

	BTN_DPAD_UP = (EC.BTN_DPAD_UP, None)
	BTN_DPAD_DOWN = (EC.BTN_DPAD_DOWN, None)
	BTN_DPAD_LEFT = (EC.BTN_DPAD_LEFT, None)
	BTN_DPAD_RIGHT = (EC.BTN_DPAD_RIGHT, None)

	KEY_ALS_TOGGLE = (EC.KEY_ALS_TOGGLE, None)

	KEY_BUTTONCONFIG = (EC.KEY_BUTTONCONFIG, None)
	KEY_TASKMANAGER = (EC.KEY_TASKMANAGER, None)
	KEY_JOURNAL = (EC.KEY_JOURNAL, None)
	KEY_CONTROLPANEL = (EC.KEY_CONTROLPANEL, None)
	KEY_APPSELECT = (EC.KEY_APPSELECT, None)
	KEY_SCREENSAVER = (EC.KEY_SCREENSAVER, None)
	KEY_VOICECOMMAND = (EC.KEY_VOICECOMMAND, None)
	KEY_ASSISTANT = (EC.KEY_ASSISTANT, None)

	KEY_BRIGHTNESS_MIN = (EC.KEY_BRIGHTNESS_MIN, None)
	KEY_BRIGHTNESS_MAX = (EC.KEY_BRIGHTNESS_MAX, None)

	KEY_KBDINPUTASSIST_PREV = (EC.KEY_KBDINPUTASSIST_PREV, None)
	KEY_KBDINPUTASSIST_NEXT = (EC.KEY_KBDINPUTASSIST_NEXT, None)
	KEY_KBDINPUTASSIST_PREVGROUP = (EC.KEY_KBDINPUTASSIST_PREVGROUP, None)
	KEY_KBDINPUTASSIST_NEXTGROUP = (EC.KEY_KBDINPUTASSIST_NEXTGROUP, None)
	KEY_KBDINPUTASSIST_ACCEPT = (EC.KEY_KBDINPUTASSIST_ACCEPT, None)
	KEY_KBDINPUTASSIST_CANCEL = (EC.KEY_KBDINPUTASSIST_CANCEL, None)

	KEY_RIGHT_UP = (EC.KEY_RIGHT_UP, None)
	KEY_RIGHT_DOWN = (EC.KEY_RIGHT_DOWN, None)
	KEY_LEFT_UP = (EC.KEY_LEFT_UP, None)
	KEY_LEFT_DOWN = (EC.KEY_LEFT_DOWN, None)

	KEY_ROOT_MENU = (EC.KEY_ROOT_MENU, None)
	KEY_MEDIA_TOP_MENU = (EC.KEY_MEDIA_TOP_MENU, None)
	KEY_NUMERIC_11 = (EC.KEY_NUMERIC_11, None)
	KEY_NUMERIC_12 = (EC.KEY_NUMERIC_12, None)

	KEY_AUDIO_DESC = (EC.KEY_AUDIO_DESC, None)
	KEY_3D_MODE = (EC.KEY_3D_MODE, None)
	KEY_NEXT_FAVORITE = (EC.KEY_NEXT_FAVORITE, None)
	KEY_STOP_RECORD = (EC.KEY_STOP_RECORD, None)
	KEY_PAUSE_RECORD = (EC.KEY_PAUSE_RECORD, None)
	KEY_VOD = (EC.KEY_VOD, None)
	KEY_UNMUTE = (EC.KEY_UNMUTE, None)
	KEY_FASTREVERSE = (EC.KEY_FASTREVERSE, None)
	KEY_SLOWREVERSE = (EC.KEY_SLOWREVERSE, None)

	KEY_DATA = (EC.KEY_DATA, None)
	KEY_ONSCREEN_KEYBOARD = (EC.KEY_ONSCREEN_KEYBOARD, None)

	BTN_TRIGGER_HAPPY = (EC.BTN_TRIGGER_HAPPY, None)
	BTN_TRIGGER_HAPPY1 = (EC.BTN_TRIGGER_HAPPY1, None)
	BTN_TRIGGER_HAPPY2 = (EC.BTN_TRIGGER_HAPPY2, None)
	BTN_TRIGGER_HAPPY3 = (EC.BTN_TRIGGER_HAPPY3, None)
	BTN_TRIGGER_HAPPY4 = (EC.BTN_TRIGGER_HAPPY4, None)
	BTN_TRIGGER_HAPPY5 = (EC.BTN_TRIGGER_HAPPY5, None)
	BTN_TRIGGER_HAPPY6 = (EC.BTN_TRIGGER_HAPPY6, None)
	BTN_TRIGGER_HAPPY7 = (EC.BTN_TRIGGER_HAPPY7, None)
	BTN_TRIGGER_HAPPY8 = (EC.BTN_TRIGGER_HAPPY8, None)
	BTN_TRIGGER_HAPPY9 = (EC.BTN_TRIGGER_HAPPY9, None)
	BTN_TRIGGER_HAPPY10 = (EC.BTN_TRIGGER_HAPPY10, None)
	BTN_TRIGGER_HAPPY11 = (EC.BTN_TRIGGER_HAPPY11, None)
	BTN_TRIGGER_HAPPY12 = (EC.BTN_TRIGGER_HAPPY12, None)
	BTN_TRIGGER_HAPPY13 = (EC.BTN_TRIGGER_HAPPY13, None)
	BTN_TRIGGER_HAPPY14 = (EC.BTN_TRIGGER_HAPPY14, None)
	BTN_TRIGGER_HAPPY15 = (EC.BTN_TRIGGER_HAPPY15, None)
	BTN_TRIGGER_HAPPY16 = (EC.BTN_TRIGGER_HAPPY16, None)
	BTN_TRIGGER_HAPPY17 = (EC.BTN_TRIGGER_HAPPY17, None)
	BTN_TRIGGER_HAPPY18 = (EC.BTN_TRIGGER_HAPPY18, None)
	BTN_TRIGGER_HAPPY19 = (EC.BTN_TRIGGER_HAPPY19, None)
	BTN_TRIGGER_HAPPY20 = (EC.BTN_TRIGGER_HAPPY20, None)
	BTN_TRIGGER_HAPPY21 = (EC.BTN_TRIGGER_HAPPY21, None)
	BTN_TRIGGER_HAPPY22 = (EC.BTN_TRIGGER_HAPPY22, None)
	BTN_TRIGGER_HAPPY23 = (EC.BTN_TRIGGER_HAPPY23, None)
	BTN_TRIGGER_HAPPY24 = (EC.BTN_TRIGGER_HAPPY24, None)
	BTN_TRIGGER_HAPPY25 = (EC.BTN_TRIGGER_HAPPY25, None)
	BTN_TRIGGER_HAPPY26 = (EC.BTN_TRIGGER_HAPPY26, None)
	BTN_TRIGGER_HAPPY27 = (EC.BTN_TRIGGER_HAPPY27, None)
	BTN_TRIGGER_HAPPY28 = (EC.BTN_TRIGGER_HAPPY28, None)
	BTN_TRIGGER_HAPPY29 = (EC.BTN_TRIGGER_HAPPY29, None)
	BTN_TRIGGER_HAPPY30 = (EC.BTN_TRIGGER_HAPPY30, None)
	BTN_TRIGGER_HAPPY31 = (EC.BTN_TRIGGER_HAPPY31, None)
	BTN_TRIGGER_HAPPY32 = (EC.BTN_TRIGGER_HAPPY32, None)
	BTN_TRIGGER_HAPPY33 = (EC.BTN_TRIGGER_HAPPY33, None)
	BTN_TRIGGER_HAPPY34 = (EC.BTN_TRIGGER_HAPPY34, None)
	BTN_TRIGGER_HAPPY35 = (EC.BTN_TRIGGER_HAPPY35, None)
	BTN_TRIGGER_HAPPY36 = (EC.BTN_TRIGGER_HAPPY36, None)
	BTN_TRIGGER_HAPPY37 = (EC.BTN_TRIGGER_HAPPY37, None)
	BTN_TRIGGER_HAPPY38 = (EC.BTN_TRIGGER_HAPPY38, None)
	BTN_TRIGGER_HAPPY39 = (EC.BTN_TRIGGER_HAPPY39, None)
	BTN_TRIGGER_HAPPY40 = (EC.BTN_TRIGGER_HAPPY40, None)

	KEY_SHIFT = (EC.KEY_LEFTSHIFT, VK.VK_SHIFT)
	KEY_CTRL = (EC.KEY_LEFTCTRL, VK.VK_CONTROL)
	KEY_ALT = (EC.KEY_LEFTALT, VK.VK_MENU)
	KEY_META = (EC.KEY_LEFTMETA, VK.VK_LWIN)

	KEY_JUNJA = (None, VK.VK_JUNJA)
	KEY_FINAL = (None, VK.VK_FINAL)
	KEY_KANJI = (None, VK.VK_KANJI)
	KEY_CONVERT = (None, VK.VK_CONVERT)
	KEY_NONCONVERT = (None, VK.VK_NONCONVERT)
	KEY_ACCEPT = (None, VK.VK_ACCEPT)
	KEY_MODECHANGE = (None, VK.VK_MODECHANGE)
	KEY_EXECUTE = (None, VK.VK_EXECUTE)
	KEY_OEM_8 = (None, VK.VK_OEM_8)
	KEY_PROCESS = (None, VK.VK_PROCESSKEY)
	KEY_PACKET = (None, VK.VK_PACKET)
	KEY_ATTN = (None, VK.VK_ATTN)
	KEY_CRSEL = (None, VK.VK_CRSEL)
	KEY_EXSEL = (None, VK.VK_EXSEL)
	KEY_EREOF = (None, VK.VK_EREOF)
	KEY_NONAME = (None, VK.VK_NONAME)
	KEY_PA1 = (None, VK.VK_PA1)
	KEY_OEM_CLEAR = (None, VK.VK_OEM_CLEAR)

	def __new__(cls, value):

		event_code, virtual_keycode = value
		if event_code and event_code not in cls.__ec2vk__:
			cls.__ec2vk__[event_code] = virtual_keycode
		if virtual_keycode and virtual_keycode not in cls.__vk2ec__:
			cls.__vk2ec__[virtual_keycode] = event_code
		# super() throws a runtime error on python < 3.6
		# ~ return super().__new__(cls, value)
		return tuple.__new__(cls, value)

	@classmethod
	def _missing_(cls, value):

		# None is a valid Key tuple member, so set vars to False and
		# explicitly check their value by identity
		event_code = virtual_keycode = False
		if (isinstance(value, Sequence) and len(value) == 2):
			if isinstance(value[0], EC) or value[0] is None:
				event_code = value[0]
			else:
				event_code = EC(value[0])
			if isinstance(value[1], VK) or value[1] is None:
				virtual_keycode = value[1]
			else:
				virtual_keycode = VK(value[1])
		if event_code is not False and virtual_keycode is not False:
			value = (event_code, virtual_keycode)
		return super()._missing_(value)

	def __repr__(self):

		return self.name

	@classmethod
	def from_ec(cls, event_code):
		"""Return enum member which contains this event code.

		If the event code is not defined in ``input.h`` the enum member
		will be ``_UNDEFINED_``.

		Args:
			event_code (int): A Linux event code.
		Returns:
			.Key: A platform independent enum member.
		"""

		if not isinstance(event_code, EC):
			event_code = EC(event_code)
		try:
			virtual_keycode = cls.__ec2vk__[event_code]
		except KeyError:
			virtual_keycode = None
		return cls((event_code, virtual_keycode))

	@classmethod
	def from_vk(cls, virtual_keycode):
		"""Return enum member which contains this virtual keycode.

		If the virtual keycode is not defined in `Virtual Keycodes`_
		the enum member will be ``_UNDEFINED_``.

		Args:
			virtual_keycode (int): A Windows virtual keycode.
		Returns:
			.Key: A platform independent enum member.
		"""

		if not isinstance(virtual_keycode, VK):
			virtual_keycode = VK(virtual_keycode)
		try:
			event_code = cls.__vk2ec__[virtual_keycode]
		except KeyError:
			event_code = None
		return cls((event_code, virtual_keycode))

	@property
	def ec(self):
		"""A Linux event code that is this enum member.

		Returns:
			~macpy.constant.EC.EventCode: A Linux event code.
		"""

		return self[0]

	@property
	def vk(self):
		"""A Windows virtual keycode that is this enum member.

		Returns:
			~macpy.constant.VK.VirtualKeycode: A Windows virtual keycode.
		"""

		return self[1]


export(Key, globals())


class KeyState(Enum):
	"""An enumeration describing whether the key/button is pressed or released.

	This enum implements :meth:`__bool__`, so if the key is pressed it will be
	:obj:`True` and :obj:`False` otherwise.
	"""

	RELEASED = False
	PRESSED = True

	def __bool__(self):

		return self.value


class Modifiers(tuple, Enum):

	SHIFT = (KEY_SHIFT, KEY_LEFTSHIFT, KEY_RIGHTSHIFT)
	CTRL = (KEY_CTRL, KEY_LEFTCTRL, KEY_RIGHTCTRL)
	ALT = (KEY_ALT, KEY_LEFTALT, KEY_RIGHTALT)
	META = (KEY_META, KEY_LEFTMETA, KEY_RIGHTMETA)
